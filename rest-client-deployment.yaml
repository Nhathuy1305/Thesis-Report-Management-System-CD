apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-frontend
  labels:
    app: client-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client-frontend
  template:
    metadata:
      labels:
        app: client-frontend
    spec:
      containers:
      - name: client
        image: daniel135dang/client:latest
        ports:
        - containerPort: 3000
        envFrom:
          - configMapRef:
              name: app-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rest-backend
  labels:
    app: rest-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rest-backend
  template:
    metadata:
      labels:
        app: rest-backend
    spec:
      volumes:
      - name: rest-file
        persistentVolumeClaim:
          claimName: rest-file-pvc
      - name: google-credentials
        secret:
          secretName: google-credentials
      containers:
      - name: rest-backend
        image: daniel135dang/rest:1.0.0-87
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: rest-file
          mountPath: /mnt/rest/files
        - name: google-credentials
          mountPath: /app/google_credentials.json
          subPath: google_credentials.json
          readOnly: true
        env:
          - name: PORT
            value: "5000"
          - name: APP_NAME
            value: "rest"
          - name: HOST
            value: "rest-service"
          - name: RABBITMQ_HOST
            value: "amqp://rabbitmq:5672"
          - name: RABBITMQ_FILE_LOCATION_EXCHANGE
            value: "uploaded_file_location"
          - name: RABBITMQ_OUTPUT_LOCATION_EXCHANGE
            value: "output_location"
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: services-config
                key: POSTGRES_HOST
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                name: services-config
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: services-config
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: services-config
                key: POSTGRES_DB
          - name: ROOT_DIR
            valueFrom:
              configMapKeyRef:
                name: services-config
                key: ROOT_DIR
          - name: REACT_APP_SERVICE_LIST
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: REACT_APP_SERVICE_LIST
          - name: GUIDELINES_LIST
            value: "chapter_title,format_check,page_count"
          - name: GOOGLE_CLOUD_STORAGE_BUCKET
            valueFrom:
              configMapKeyRef:
                name: services-config
                key: GOOGLE_CLOUD_STORAGE_BUCKET
---
apiVersion: v1
kind: Service
metadata:
  name: client-frontend-service
spec:
  type: LoadBalancer
  selector:
    app: client-frontend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: rest-service
spec:
  type: ClusterIP
  selector:
    app: rest-backend
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000